version: '2'

volumes:
  postgres_data_dev: {}
  postgres_backup_dev: {}
  node_modules: {}

services:
  postgres:
    build: ./docker/postgres
    volumes:
      - postgres_data_dev:/Users/angel/projects/saas_app/saas_app/postgresql/data
      - postgres_backup_dev:/backups
    environment:
      - POSTGRES_USER=saas_app
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
  django:
    build:
      context: .
      dockerfile: ./docker/django/Dockerfile-dev
    command: /start-dev.sh
    depends_on:
      - postgres
      - redis
    environment:
      - POSTGRES_USER=saas_app
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    links:
      - postgres

  celery:
    build:
      context: .
      dockerfile: ./docker/django/Dockerfile-dev
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app
    command: celery -A saas_app.taskapp worker -B -l INFO
    environment:
      - C_FORCE_ROOT=True
      - POSTGRES_USER=saas_app
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD

  node:
    build:
      context: .
      dockerfile: ./docker/node/Dockerfile
    volumes:
      - .:/app
      - node_modules:/app/node_modules
    ports:
      - "8080:8080"
    command: ["npm", "run", "dev"]

  redis:
    image: redis:6.2
